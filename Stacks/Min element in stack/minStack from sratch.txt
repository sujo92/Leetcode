public class MinStack {
    private class Node{
        int data;
        Node next;

        public Node(int data){
            this.data = data;
            this.next = null;
        }
    }

    Node head;
    int min= Integer.MAX_VALUE;

    public void push(int x){
        if(head == null){
            head= new Node(x);
            min=x;
        }else{
            if(x <= min){
                //push min on stack
                Node minNode = new Node(min);
                Node next = head;
                head= minNode;
                head.next = next;

                //update min
                min = x;
            }
            //push x on stack
            Node temp = new Node(x);
            Node next = head;
            head= temp;
            head.next = next;
        }
    }

    public int pop(){
        if(head==null){
            return -1;
        }else{
            Node removeNode = head;
            if(removeNode.data == min){
                if(head.next != null) {
                    head = head.next;
                    min = head.data;
                }else{
                    min = Integer.MAX_VALUE;
                }
            }
            head= head.next;
            return removeNode.data;
        }
    }

    public int min(){
        if(min==Integer.MAX_VALUE){
            return -1;
        }else {
            return min;
        }
    }
}
