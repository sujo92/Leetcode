class Solution {
    public int trap(int[] height) {
        int[] maxSoFarFromLeft = new int[height.length];
        if(height.length == 0)
            return 0;
        maxSoFarFromLeft[0]=0;
        int maxFromRight= 0;
        int waterTrapped=0;
        
        for(int i=1; i<height.length; i++){
              maxSoFarFromLeft[i] = Math.max(maxSoFarFromLeft[i-1], height[i-1]);
        }
        
        for(int i=height.length-2; i>=0; i--){
            maxFromRight = Math.max(maxFromRight, height[i+1]);
            int maxBar = Math.min(maxFromRight, maxSoFarFromLeft[i]);
            if(maxBar > height[i])
                waterTrapped += maxBar-height[i]; 
        }
        
        return waterTrapped;
    }
}